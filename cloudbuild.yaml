steps:
  ## Deploy backend
  - id: 'download-cached-maven-dependencies'
    name: gcr.io/cloud-builders/gsutil
    entrypoint: bash
    volumes:
      - name: 'maven-repository'
        path: '/root/.m2'
    args:
      - '-c'
      - |
        gsutil cp gs://${PROJECT_ID}_cloudbuild/cache/maven-dependencies.tgz maven-dependencies.tgz || exit 0
        tar -zxf maven-dependencies.tgz --directory / || exit 0
    ## Use || exit 0 to have the error ignored if cache file does not exist

  - id: 'build-back'
    name: adoptopenjdk/openjdk11:jdk-11.0.8_10
    dir: cloudcmr-back
    entrypoint: bash
    volumes:
      - name: 'maven-repository'
        path: '/root/.m2'
    args:
      - '-c'
      - |
        ./mvnw install -DskipTests
        cp target/*-all.jar ./app.jar

  - id: 'dockerize-back'
    name: gcr.io/cloud-builders/docker
    dir: cloudcmr-back
    args: ['build',
           '-f', './src/main/docker/Dockerfile',
           '-t', 'gcr.io/$PROJECT_ID/cloudcmr-back:${SHORT_SHA}',
           '-t', 'gcr.io/$PROJECT_ID/cloudcmr-back:latest',
           '.']

  - id: 'push-to-cloud-registry'
    name: gcr.io/cloud-builders/docker
    args: ['push', 'gcr.io/$PROJECT_ID/cloudcmr-back:${SHORT_SHA}']

  - id: 'build-k8s-back-file'
    waitFor: ['push-to-cloud-registry']
    name: ubuntu
    dir: cloudcmr-back
    entrypoint: bash
    args:
      - '-c'
      - |
        apt-get update
        apt-get install -qq -y gettext
        export IMAGE_VERSION=${SHORT_SHA}
        export ENVIRONMENT=${_ENVIRONMENT}
        export DATASTORE_NAMESPACE=${_DATASTORE_NAMESPACE}
        export MEMBER_SUBSCRIPTION_NAME=${_MEMBER_SUBSCRIPTION_NAME}
        export REPLICAS_COUNT=${_REPLICAS_COUNT}
        envsubst < src/main/deploy/k8s.yaml > k8s_with_env.yaml

  - id: 'deploy-back-gke'
    waitFor: ['build-k8s-back-file']
    name: 'gcr.io/cloud-builders/gke-deploy'
    dir: cloudcmr-back
    args:
      - run
      - --filename=k8s_with_env.yaml
      - --location=${_CLUSTER_ZONE}
      - --cluster=${_CLUSTER_NAME}

  #########################################
  #### Deploy Functions
  #########################################
  - id: 'build-functions'
    waitFor: ['download-cached-maven-dependencies']
    name: adoptopenjdk/openjdk11:jdk-11.0.8_10
    dir: import-members-function
    entrypoint: bash
    volumes:
      - name: 'maven-repository'
        path: '/root/.m2'
    args:
      - '-c'
      - |
        ./mvnw install -DskipTests

  - id: 'deploy-import-members-function'
    waitFor: ['build-functions']
    name: gcr.io/cloud-builders/gcloud
    dir: import-members-function
    entrypoint: bash
    args:
      - '-c'
      - |
        gcloud functions deploy import-members-function \
          --region europe-west2 \
          --entry-point org.springframework.cloud.function.adapter.gcp.GcfJarLauncher \
          --runtime java11 \
          --trigger-resource ${_UPLOAD_BUCKET_NAME} \
          --trigger-event google.storage.object.finalize \
          --source target/deploy \
          --memory 512MB

  - id: 'upload-cached-maven-dependencies'
    waitFor: ['build-back', 'build-functions']
    name: gcr.io/cloud-builders/gsutil
    entrypoint: bash
    volumes:
      - name: 'maven-repository'
        path: '/root/.m2'
    args:
      - '-c'
      - |
        tar -zcf maven-dependencies.tgz /root/.m2
        gsutil cp maven-dependencies.tgz gs://${PROJECT_ID}_cloudbuild/cache/maven-dependencies.tgz

  #########################################
  #### Deploy frontEnd
  #########################################
  - id: 'download-cached-yarn-dependencies'
    waitFor: ['-']
    name: gcr.io/cloud-builders/gsutil
    dir: cloudcmr-front
    entrypoint: bash
    args:
      - '-c'
      - |
        gsutil cp gs://${PROJECT_ID}_cloudbuild/cache/yarn-dependencies.tgz yarn-dependencies.tgz || exit 0
        tar -zxf yarn-dependencies.tgz || exit 0

  - id: 'install-yarn'
    waitFor: ['download-cached-yarn-dependencies']
    name: node
    entrypoint: yarn
    dir: cloudcmr-front
    args: ['install', '--silent']

  - id: 'build-front'
    waitFor: ['install-yarn']
    name: node
    entrypoint: yarn
    dir: cloudcmr-front
    args: ['build']

  - id: 'dockerize-front'
    waitFor: [ 'build-front' ]
    name: gcr.io/cloud-builders/docker
    dir: cloudcmr-front
    args: [ 'build',
            '-f', 'Dockerfile',
            '-t', 'gcr.io/$PROJECT_ID/cloudcmr-front:${SHORT_SHA}',
            '-t', 'gcr.io/$PROJECT_ID/cloudcmr-front:latest',
            '.' ]

  - id: 'push-front-to-cloud-registry'
    waitFor: ['dockerize-front']
    name: gcr.io/cloud-builders/docker
    args: ['push', 'gcr.io/$PROJECT_ID/cloudcmr-front:${SHORT_SHA}']

  - id: 'build-k8s-front-file'
    waitFor: ['push-front-to-cloud-registry']
    name: ubuntu
    dir: cloudcmr-front
    entrypoint: bash
    args:
      - '-c'
      - |
        apt-get update
        apt-get install -qq -y gettext
        export IMAGE_VERSION=${SHORT_SHA}
        export ENVIRONMENT=${_ENVIRONMENT}
        export BASE_URL=${_BASE_URL}
        export REPLICAS_COUNT=${_REPLICAS_FRONT_COUNT}
        envsubst < deploy/k8s.yaml > k8s_with_env.yaml

  - id: 'deploy-front-gke'
    waitFor: ['build-k8s-front-file']
    name: 'gcr.io/cloud-builders/gke-deploy'
    dir: cloudcmr-front
    args:
      - run
      - --filename=k8s_with_env.yaml
      - --location=${_CLUSTER_ZONE}
      - --cluster=${_CLUSTER_NAME}

  - id: 'upload-cached-yarn-dependencies'
    waitFor: ['build-front']
    name: gcr.io/cloud-builders/gsutil
    entrypoint: bash
    dir: cloudcmr-front
    args:
      - '-c'
      - |
        tar -zcf yarn-dependencies.tgz ./node_modules
        gsutil cp yarn-dependencies.tgz gs://${PROJECT_ID}_cloudbuild/cache/yarn-dependencies.tgz

images:
  - 'gcr.io/$PROJECT_ID/cloudcmr-back:${SHORT_SHA}'
  - 'gcr.io/$PROJECT_ID/cloudcmr-back:latest'
  - 'gcr.io/$PROJECT_ID/cloudcmr-front:${SHORT_SHA}'
  - 'gcr.io/$PROJECT_ID/cloudcmr-front:latest'